I"þ<p><img src="https://img.shields.io/npm/v/react-skills" alt="npm_version" />
<img src="https://img.shields.io/npm/l/react-skills" alt="license" /></p>

<p><img src="https://repository-images.githubusercontent.com/260488185/fa955200-8c9f-11ea-91d8-d8307c6c288c" alt="react-skills preview" /></p>

<ul>
  <li><strong><a href="#links">Links</a></strong></li>
  <li><strong><a href="#install">Installation</a></strong></li>
  <li><strong><a href="#usage">Usage</a></strong></li>
  <li><strong><a href="#dev">Developers</a></strong></li>
  <li><strong><a href="#propsapi">Props API</a></strong></li>
</ul>

<p><strong><em>This project was bootstrapped with <a href="https://github.com/dimimikadze/create-react-library">Create React Library</a>.</em></strong></p>

<p><a name="links"></a></p>
<h2 id="links">Links</h2>

<ul>
  <li><a href="https://kevincastejon.github.io/react-skills/documentation">Documentation</a></li>
  <li><a href="https://kevincastejon.github.io/react-skills/">Quick demo</a></li>
  <li><a href="https://kevincastejon.github.io/react-skills/storybook">Storybook playground</a></li>
  <li><a href="https://www.npmjs.com/package/react-skills">NPM</a></li>
  <li><a href="https://github.com/kevincastejon/react-skills">Github</a></li>
</ul>

<p><a name="install"></a></p>
<h2 id="installation">Installation</h2>

<h3 id="start">Start</h3>
<p>`npm run start` or `yarn start`</p>

<p>Runs the library in development mode. Open <a href="http://localhost:3000">http://localhost:3000</a> to view it in the browser.</p>

<h3 id="test">Test</h3>
<p>`npm run test` or `yarn test`</p>

<p>Runs the test watcher in an interactive mode.</p>

<h3 id="build">Build</h3>
<p>`npm run build` or `yarn build`</p>

<p>Builds the library for production to the `build` folder.
It correctly bundles React in production mode and optimizes the build for the best performance.</p>

<h3 id="deploy">Deploy</h3>
<p>`npm run deploy` or `yarn deploy`
Builds the component then push it on NPM as new version.
Builds the github page app for production to the `demo` folder.
Creates a gh-page github branch and push the demo build on that branch.</p>

<p><a name="usage"></a></p>
<h2 id="usage">Usage</h2>

<p>```js
import { SkillBars } from 'react-skills';</p>

<p>const skillsData= [
  {
    name: 'ReactJS',
    level: 100,
    color: 'blue',
  },
  {
    name: 'SomeOtherTech',
    level: 85,
    color: 'red',
  }
]</p>

<p>// â€¦</p>

<p>&lt;SkillBars skills={skillsData} /&gt;
```</p>

<p>or you can use the SkillBar (singular) component this way:
```js
import { SkillBar } from 'react-skills';</p>

<p>// â€¦</p>

<p>&lt;SkillBar name="ReactJS" level={100} color="blue" /&gt;
&lt;SkillBar name="SomeOtherTech" level={80} color="red" /&gt;
```</p>

<p><a name="dev"></a></p>
<h2 id="developers">Developers</h2>

<p>```bash
npm i react-skills
```</p>

<p><a name="propsapi"></a></p>
<h2 id="props-api">Props API</h2>

<h3 id="skillbar">SkillBar</h3>

<p>Displays a animated skill bar</p>

<table>
  <thead>
    <tr>
      <th>Property</th>
      <th>Type</th>
      <th>Required</th>
      <th>Default value</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>name</strong></td>
      <td><em>string</em></td>
      <td>yes</td>
      <td>Â </td>
      <td style="text-align: left">The name of the skill.</td>
    </tr>
    <tr>
      <td><strong>level</strong></td>
      <td><em>number</em></td>
      <td>yes</td>
      <td>Â </td>
      <td style="text-align: left">The skill level.</td>
    </tr>
    <tr>
      <td><strong>color</strong></td>
      <td><em>string</em></td>
      <td>yes</td>
      <td>Â </td>
      <td style="text-align: left">The background color.</td>
    </tr>
    <tr>
      <td><strong>duration</strong></td>
      <td><em>number</em></td>
      <td>no</td>
      <td>2</td>
      <td style="text-align: left">The animation duration in seconds.</td>
    </tr>
    <tr>
      <td><strong>height</strong></td>
      <td><em>number</em></td>
      <td>no</td>
      <td>30</td>
      <td style="text-align: left">The component height.</td>
    </tr>
    <tr>
      <td><strong>levelProgress</strong></td>
      <td><em>bool</em></td>
      <td>no</td>
      <td>false</td>
      <td style="text-align: left">Whether or not the level text should increment as the bar grows up or directly display the level value.</td>
    </tr>
    <tr>
      <td><strong>flat</strong></td>
      <td><em>bool</em></td>
      <td>no</td>
      <td>false</td>
      <td style="text-align: left">Whether the component owns a box shadow or not.</td>
    </tr>
    <tr>
      <td><strong>labelWidth</strong></td>
      <td><em>number</em></td>
      <td>no</td>
      <td>100</td>
      <td style="text-align: left">The label width.</td>
    </tr>
    <tr>
      <td><strong>customLabel</strong></td>
      <td><em>func</em></td>
      <td>no</td>
      <td>null</td>
      <td style="text-align: left">User defined function that takes a skill parameter and returns a React component to display instead of the default label.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="skillbars">SkillBars</h3>

<p>Group your Skillbars components together</p>

<table>
  <thead>
    <tr>
      <th>Property</th>
      <th>Type</th>
      <th>Required</th>
      <th>Default value</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>skills</strong></td>
      <td><em>arrayOf</em></td>
      <td>yes</td>
      <td>Â </td>
      <td style="text-align: left">An array of SkillBar props data</td>
    </tr>
    <tr>
      <td><strong>duration</strong></td>
      <td><em>number</em></td>
      <td>no</td>
      <td>2</td>
      <td style="text-align: left">The animation duration in seconds.</td>
    </tr>
    <tr>
      <td><strong>levelProgress</strong></td>
      <td><em>bool</em></td>
      <td>no</td>
      <td>false</td>
      <td style="text-align: left">Whether or not the level text should increment as the bar grow up or directly display the level value.</td>
    </tr>
    <tr>
      <td><strong>flat</strong></td>
      <td><em>bool</em></td>
      <td>no</td>
      <td>false</td>
      <td style="text-align: left">Whether the skillbars own a box shadow or not.</td>
    </tr>
    <tr>
      <td><strong>barsHeight</strong></td>
      <td><em>number</em></td>
      <td>no</td>
      <td>30</td>
      <td style="text-align: left">The SkillBar component height.</td>
    </tr>
    <tr>
      <td><strong>labelsWidth</strong></td>
      <td><em>number</em></td>
      <td>no</td>
      <td>100</td>
      <td style="text-align: left">The SkillBar component label width.</td>
    </tr>
    <tr>
      <td><strong>spacing</strong></td>
      <td><em>number</em></td>
      <td>no</td>
      <td>15</td>
      <td style="text-align: left">The spacing between each SkillBar row.</td>
    </tr>
    <tr>
      <td><strong>customLabels</strong></td>
      <td><em>func</em></td>
      <td>no</td>
      <td>null</td>
      <td style="text-align: left">User defined function that takes a skill parameter and returns a React component to display instead of the default labels.</td>
    </tr>
  </tbody>
</table>

<hr />

<p><sub>This document was generated by the <a href="https://github.com/kevincastejon/react-doc-generator" target="_blank"><strong>React DOC Generator v1.10.0</strong></a>.</sub></p>
:ET